#!/bin/bash

# ./rolling-files --source-path a --dest-path b --auto-yes c

# ----- handle arguments ---- >

while [ $# -ne 0 ]
do
    arg="$1"
    case "$arg" in
        --source-path)
            SOURCE_PATH="$2"
            ;;
        --dest-path)
            DEST_PATH="$2"
            ;;
	--keep-N)
	    KEEP_N="$2"
	    ;;
        --auto-yes)
            AUTO_YES=${2:-true}
            ;;
        --help|-h|\?)
            IS_HELP=true
	    ;;
	--verbose)
	    IS_VERBOSE=true
            ;;
        *)
            ;;
    esac
    shift
done

# ------ handle help ------------- <

if [ "$IS_HELP" = true ]; then
 echo "usage:" 
 printf "\trolling-files --source-path [string] --dest-path [string] --auto-yes [boolean]\n"
 echo "exmaple:"
 printf "\trolling-files --source-path ~/backup/ --dest-path /mnt/datacenter/backup/ --auto-yes true\n"

 exit 0
fi 
# ----------- main --------------- >

! [[ "$AUTO_YES" = true ]] && ! [[ "$AUTO_YES" = false ]] && AUTO_YES=false

[[ -z `echo "$KEEP_N" | grep -E ^\-?[0-9]+$` ]] && KEEP_N=3

IS_VERBOSE=${IS_VERBOSE:-false}

if [ -z "$SOURCE_PATH" ]; then
 echo "source path is required."
 exit 1
fi

if [ -z "$DEST_PATH" ]; then
 echo "dest path is required."
 exit 1
fi

echo "IS VERBOSE? $IS_VERBOSE"
echo "AUTO YES? $AUTO_YES"
echo "SOURCE PATH: $SOURCE_PATH"
echo "DEST PATH: $DEST_PATH"
echo "KEEP N: $KEEP_N"

[[ "$IS_VERBOSE" = true ]] && echo "***************** start - "`date`" ****************"

FILE_LIST=$(ls -lrth "$SOURCE_PATH" | grep -E "([a-zA-Z0-9_]+)_[[:digit:]]{8}_[[:digit:]]{6}\.(bz2|tar\.gz)" | awk {'print $9'} | sed -E 's/\.part-[0-9]+$//' | uniq | sort)

NUM_OF_FILES=$(echo "$FILE_LIST" | wc -l)

if [ "$NUM_OF_FILES" -le 1 ]; then
 echo "nothing to do."
else
 NUM_OF_FILES_TO_MOVE=`expr $NUM_OF_FILES - $KEEP_N`
 echo "NUM OF FILES TO MOVE: $NUM_OF_FILES_TO_MOVE"

 FILES_TO_MOVE=$(echo "$FILE_LIST" | head -n "-$KEEP_N")
 FILES_TO_KEEP=$(echo "$FILE_LIST" | tail -n "$KEEP_N")
 
 echo "FILES TO MOVE:" 
 echo "$FILES_TO_MOVE" | xargs -n 1 echo -e "\t"
 echo "FILES TO KEEP:"
 echo "$FILES_TO_KEEP" | xargs -n 1 echo -e "\t"

 if ! [ "$AUTO_YES" = true ]; then
  read -rp "Are you sure you want to continue? [Y/n] " key 
 fi

 if [ "$key" = 'Y' ] || [ "$key" = 'y' ] || [ "$AUTO_YES" = true ]; then
  echo "Y."
  RAND_NAME=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 6 | head -n 1)
  ls -l "$SOURCE_PATH" | awk '{ print $9 }' > "/tmp/source_files_$RAND_NAME"
  echo "$FILES_TO_MOVE" | xargs -I {} grep -n {} "/tmp/source_files_$RAND_NAME" | sed 's/^\([0-9]\{1,\}\:\)//g' | xargs -n 1 -i echo "$SOURCE_PATH/{}" | xargs -n 1 -i rsync -avh --progress --remove-source-files {} "$DEST_PATH"
 else
  echo "Abort."
 fi

fi

[[ "$IS_VERBOSE" = true ]] && echo "***************** end- "`date`" ****************"